% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv.gpls.R
\name{cv.gpls}
\alias{cv.gpls}
\title{Peform cross-validation gpls}
\usage{
cv.gpls(
  data,
  glsSt,
  xNames,
  outVar,
  corMat,
  foldid,
  cvType,
  lambdas,
  transFun = "identity",
  transFunArgs = list()
)
}
\arguments{
\item{data}{A data matrix or data frame}

\item{glsSt}{a covariance structure, as supplied to nlme::gls as "correlation"}

\item{xNames}{names of the regressors in data}

\item{outVar}{name of the outcome variable in data}

\item{corMat}{a starting value for th correlation matrix. Taken to be a diagonal matrix if missing}

\item{foldid}{An optional vector deffining the fold}

\item{cvType}{A character vector defining the type of cross-validation.
Either "random" or "blocked", ignored if foldid is provided}

\item{lambdas}{an optional lambda sequence}
}
\value{

}
\description{
Peform cross-validation gpls
}
\examples{
#' library(nlme)
n = 50 #Sample size
p = 100 #Number of features
g = 10 #Size of the grid
#Generate grid
Grid = expand.grid("x" = seq_len(g), "y" = seq_len(g))
# Sample points from grid without replacement
GridSample = Grid[sample(nrow(Grid), n, replace = FALSE),]
#Generate outcome and regressors
a = rnorm(n)
b = matrix(rnorm(p*n), n , p)
#Compile to a matrix
df = data.frame("a" = a, "b" = b, GridSample)
# Define the correlation structure (see ?nlme::gls), with initial nugget 0.5 and range 5
corStruct = corGaus(form = ~ x + y, nugget = TRUE, value = c("range" = 5, "nugget" = 0.5))
#Fit the gpls model, for simplicity for a simple lambda
gplsFitCV = cv.gpls(data = df, outVar = "a", xNames = grep(names(df), pattern = "b", value =TRUE),
glsSt = corStruct, nfolds = 5)
gplsFitCV$lambda.1se #Lambda for 1 standard error rule
coef(gplsFitCV)
}
